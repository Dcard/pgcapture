package sql

import (
	"fmt"
	"strings"
)

func DLLTriggerSQL() string {
	return fmt.Sprintf(`
CREATE SCHEMA IF NOT EXISTS pgcapture;
CREATE TABLE IF NOT EXISTS pgcapture.ddls (id SERIAL PRIMARY KEY, activity JSONB);
CREATE OR REPLACE FUNCTION pgcapture_log_ddl() RETURNS event_trigger AS $$
declare
  activity jsonb;  
begin
  select row_to_json(pg_stat_activity.*) into activity from pg_stat_activity where pid = pg_backend_pid();
  insert into pgcapture.ddls(activity) values (activity);
end;
$$ LANGUAGE plpgsql STRICT;
DROP EVENT TRIGGER IF EXISTS pgcapture_log_ddl_start;
CREATE EVENT TRIGGER pgcapture_log_ddl_start ON ddl_command_start WHEN tag IN ('%s') EXECUTE PROCEDURE pgcapture_log_ddl();
DROP EVENT TRIGGER IF EXISTS pgcapture_log_ddl_end;
CREATE EVENT TRIGGER pgcapture_log_ddl_end ON ddl_command_end WHEN TAG IN ('%s') EXECUTE PROCEDURE pgcapture_log_ddl();
`, strings.Join(WhenStart, "','"), strings.Join(WhenEnd, "','"))
}

var WhenStart = []string{
	"CREATE TABLE AS",
	"SELECT INTO",
}

var WhenEnd = []string{
	"ALTER AGGREGATE",
	"ALTER COLLATION",
	"ALTER CONVERSION",
	"ALTER DOMAIN",
	"ALTER DEFAULT PRIVILEGES",
	"ALTER EXTENSION",
	"ALTER FOREIGN DATA WRAPPER",
	"ALTER FOREIGN TABLE",
	"ALTER FUNCTION",
	"ALTER LANGUAGE",
	"ALTER LARGE OBJECT",
	"ALTER MATERIALIZED VIEW",
	"ALTER OPERATOR",
	"ALTER OPERATOR CLASS",
	"ALTER OPERATOR FAMILY",
	"ALTER POLICY",
	"ALTER SCHEMA",
	"ALTER SEQUENCE",
	"ALTER SERVER",
	"ALTER TABLE",
	"ALTER TEXT SEARCH CONFIGURATION",
	"ALTER TEXT SEARCH DICTIONARY",
	"ALTER TEXT SEARCH PARSER",
	"ALTER TEXT SEARCH TEMPLATE",
	"ALTER TRIGGER",
	"ALTER TYPE",
	"ALTER USER MAPPING",
	"ALTER VIEW",
	"COMMENT",
	"CREATE ACCESS METHOD",
	"CREATE AGGREGATE",
	"CREATE CAST",
	"CREATE COLLATION",
	"CREATE CONVERSION",
	"CREATE DOMAIN",
	"CREATE EXTENSION",
	"CREATE FOREIGN DATA WRAPPER",
	"CREATE FOREIGN TABLE",
	"CREATE FUNCTION",
	"CREATE INDEX",
	"CREATE LANGUAGE",
	"CREATE MATERIALIZED VIEW",
	"CREATE OPERATOR",
	"CREATE OPERATOR CLASS",
	"CREATE OPERATOR FAMILY",
	"CREATE POLICY",
	"CREATE RULE",
	"CREATE SCHEMA",
	"CREATE SEQUENCE",
	"CREATE SERVER",
	"CREATE TABLE",
	"CREATE TEXT SEARCH CONFIGURATION",
	"CREATE TEXT SEARCH DICTIONARY",
	"CREATE TEXT SEARCH PARSER",
	"CREATE TEXT SEARCH TEMPLATE",
	"CREATE TRIGGER",
	"CREATE TYPE",
	"CREATE USER MAPPING",
	"CREATE VIEW",
	"DROP ACCESS METHOD",
	"DROP AGGREGATE",
	"DROP CAST",
	"DROP COLLATION",
	"DROP CONVERSION",
	"DROP DOMAIN",
	"DROP EXTENSION",
	"DROP FOREIGN DATA WRAPPER",
	"DROP FOREIGN TABLE",
	"DROP FUNCTION",
	"DROP INDEX",
	"DROP LANGUAGE",
	"DROP MATERIALIZED VIEW",
	"DROP OPERATOR",
	"DROP OPERATOR CLASS",
	"DROP OPERATOR FAMILY",
	"DROP OWNED",
	"DROP POLICY",
	"DROP RULE",
	"DROP SCHEMA",
	"DROP SEQUENCE",
	"DROP SERVER",
	"DROP TABLE",
	"DROP TEXT SEARCH CONFIGURATION",
	"DROP TEXT SEARCH DICTIONARY",
	"DROP TEXT SEARCH PARSER",
	"DROP TEXT SEARCH TEMPLATE",
	"DROP TRIGGER",
	"DROP TYPE",
	"DROP USER MAPPING",
	"DROP VIEW",
	"GRANT",
	"IMPORT FOREIGN SCHEMA",
	"REVOKE",
	"SECURITY LABEL",
}
