syntax = "proto3";

package pgcapture;
option go_package = "github.com/rueian/pgcapture/pkg/pb";

import "google/protobuf/struct.proto";

message Message {
  oneof type {
    Begin begin = 1;
    Commit commit = 2;
    Change change = 3;
  }
}

message Begin {
  uint64 final_lsn = 1;
  uint64 commit_time = 2;
  uint32 remote_xid = 3;
}

message Commit {
  uint64 commit_lsn = 1;
  uint64 end_lsn = 2;
  uint64 commit_time = 3;
}

message Change {
  enum Operation {
    INSERT = 0;
    UPDATE = 1;
    DELETE = 2;
  }
  Operation op = 1;
  string namespace = 2;
  string table = 3;
  repeated Field new_tuple = 4;
  repeated Field old_tuple = 5;
}

message Field {
  string name = 1;
  uint32 oid = 2;
  bytes datum = 3;
}

service DBLogGateway {
  rpc Capture(stream CaptureRequest) returns (stream CaptureMessage);
}

service DBLogController {
  rpc PullDumpInfo(stream DumpInfoRequest) returns(stream DumpInfoResponse);
}

message CaptureRequest {
  oneof type {
    CaptureInit init = 1;
    CaptureAck ack = 2;
  }
}

message CaptureInit {
  string uri = 1;
  google.protobuf.Struct parameters = 2;
}

message CaptureAck {
  uint64 checkpoint = 1;
  bool requeue = 2;
}

message CaptureMessage {
  uint64 checkpoint = 1;
  Change change = 2;
}

message DumpInfoRequest {
  string uri = 1;
  string requeue_err = 2;
}

message DumpInfoResponse {
  string namespace = 1;
  string table = 2;
  uint32 page_begin = 3;
  uint32 page_end = 4;
}